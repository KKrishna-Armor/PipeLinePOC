AWSTemplateFormatVersion: '2010-09-09'
# *** Change this to something useful for you!
Description: github-codepipeline

Outputs:
  ArtifactsBucketArn:
    Value: !GetAtt Artifacts.Arn
  PipelineVersion:
    Value: !GetAtt CodePipeline.Version
  BuildProjectArn:
    Value: !GetAtt BuildProject.Arn

Parameters:
  # *** This value must always be passed in when creating / updating stack
  # "NoEcho" is set to true, for security, so token won't be visible when examining the resulting stack
  GitHubOAuthToken:
    Type: String
    NoEcho: true
    MinLength: 40
    MaxLength: 40
    Default: GITHUB_AUTH_TOKEN
    AllowedPattern: '[a-z0-9]*'

  # *** The remaining parameters should either be:
  # - overridden via changing "Default" here (PREFERABLE, since then they're in source control)
  # - or you can pass them in when creating / updating the stack

  # *** The owner of the Github repo for this application.
  # *** The user associated with the GITHUB TOKEN that has admin rights for this repo
  GitHubOwner:
    Type: String
    MinLength: 3
    MaxLength: 39
    Default: GITHUB_REPO_OWNER
    AllowedPattern: "[A-Za-z0-9-]+"

  GitHubRepo:
    Type: String
    Default: GITHUB_REPOSITORY_NAME
    AllowedPattern: "[A-Za-z0-9-]+"

  GitHubRepoLink:
    Type: String
    Default: GITHUB_REPOSITORY_URL

  GitHubBranch:
    Type: String
    Default: BRANCH_NAME
    AllowedPattern: "[A-Za-z0-9-/]+"

  # *** The stack name for the actual application we're deploying
  ApplicationStackName:
    Type: String
    Default: CODE_PIPELINE_STACKNAME
    AllowedPattern: "[A-Za-z0-9-]+"

  BuildSpecFilePath:
    Description: >-
      Relative BuildSpec file path for build stage. For more information, see https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html
    Type: String
    Default: 'buildspec.yml'

  ComputeType:
    AllowedValues:
      - BUILD_GENERAL1_SMALL
      - BUILD_GENERAL1_MEDIUM
      - BUILD_GENERAL1_LARGE
    Default: BUILD_GENERAL1_MEDIUM
    Description: AWS CodeBuild project compute type.
    Type: String

  EnvironmentType:
    AllowedValues:
      - LINUX_CONTAINER
      - WINDOWS_CONTAINER
    Default: LINUX_CONTAINER
    Description: Environment type used by AWS CodeBuild. See the documentation for details (https://docs.aws.amazon.com/codebuild/latest/userguide/create-project.html#create-project-cli).
    Type: String

Resources:
  Artifacts:
    Properties:
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 30
            Status: Enabled
    Type: AWS::S3::Bucket

  ArtifactsPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket:
        Ref: Artifacts
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Principal:
              Service:
                - 'serverlessrepo.amazonaws.com'
            Resource:
              !Sub '${Artifacts.Arn}/*'

  BuildOutputBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: BuildProject
    Properties:
      Name: !Ref ApplicationStackName
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactsBucket
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
      - Name: Source
        Actions:
        - Name: Source
          InputArtifacts: []
          ActionTypeId:
            Category: Source
            Owner: AWS
            Version: 1
            Provider: S3
          Configuration:
              S3Bucket: !Ref BuildOutputBucket
              PollForSourceChanges: true
              S3ObjectKey: 'Builds/BuildArtifact.zip'
          OutputArtifacts:
          - Name: BuildOutput
          RunOrder: 1
      - Name: Deploy
        Actions:
        - Name: CloudFormationDeploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: '1'
          InputArtifacts:
            - Name: BuildOutput
          Configuration:
            ActionMode: CREATE_UPDATE
            Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
            RoleArn: !GetAtt CloudformationRole.Arn
            StackName: !Ref ApplicationStackName
            TemplatePath: !Sub "BuildOutput::outputtemplate.yml"
          RunOrder: 2

  CodeBuildSourceCredential:
    Type: AWS::CodeBuild::SourceCredential
    Properties:
      AuthType: PERSONAL_ACCESS_TOKEN
      ServerType: GITHUB
      Token: !Ref GitHubOAuthToken

  BuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: BuildOutputBucket
    Properties:
      Name: !Sub
        - Build-${ApplicationStackName}
        - { ApplicationStackName: !Ref ApplicationStackName }
      ServiceRole: !GetAtt BuildProjectRole.Arn
      Source:
        Auth:
          Resource: !Ref CodeBuildSourceCredential
          Type: OAUTH
        Type: GITHUB
        BuildSpec: !Ref BuildSpecFilePath
        Location: !Ref GitHubRepoLink
      Artifacts:
        Type: S3
        Name: 'BuildArtifact.zip'
        Packaging: ZIP
        Location: !Ref BuildOutputBucket
        Path: 'Builds'
      BadgeEnabled: True
      Environment:
        ComputeType: !Ref ComputeType
        Image: 'aws/codebuild/standard:2.0'
        Type: !Ref EnvironmentType
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PULL_REQUEST_CREATED,PULL_REQUEST_UPDATED
            - Type: BASE_REF
              Pattern: ^refs/heads/master$
              ExcludeMatchedPattern: false
            - Type: ACTOR_ACCOUNT_ID
              Pattern: 12345
              ExcludeMatchedPattern: true
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: ^refs/heads/.*
            - Type: FILE_PATH
              Pattern: READ_ME
              ExcludeMatchedPattern: true

  BuildProjectRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub "Used in CodeBuild project. Created by CloudFormation ${AWS::StackId}"
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
        Version: '2012-10-17'
      Policies:
        - PolicyName: !Sub '${ApplicationStackName}-codebuild'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                - 'logs:CreateLogGroup'
                - 'logs:CreateLogStream'
                - 'logs:PutLogEvents'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Path: /service-role/

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
       - arn:aws:iam::aws:policy/AdministratorAccess

  CloudformationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess #TODO: Reduce permissions
